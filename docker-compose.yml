version: '3.8'

services:
  drum.school:
    image: drumschool
    container_name: drum.school
    ports:
      - "8081:80"
    depends_on:
      drum.postgres:
        condition: service_healthy
    build:
      context: ./src
      dockerfile: DrumSchool/Dockerfile
    volumes:
      - drumschool_data:/app/data  # Пример тома для хранения данных приложения

  drum.postgres:
    image: postgres:16.1-alpine
    container_name: drum.postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: DrumSchoolDev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres && psql -U postgres -d DrumSchoolDev -c 'SELECT 1'" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data

  drum.keycloak:
    image: quay.io/keycloak/keycloak
    container_name: drum.keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./realm.json:/opt/keycloak/data/import/realm.json  # Используем относительный путь для удобства

volumes:
  postgres_data:
  drumschool_data:
  keycloak_data:
  
  
  #  graylog
#  grafana
#  prometheus
#  node_exporter
#  passwork
  